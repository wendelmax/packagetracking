# Configuração otimizada para alto volume de consultas - Módulo Query
server:
  port: 8081
  # Timeouts otimizados para alto volume de consultas
  connection-timeout: 100
  shutdown: graceful
  graceful-timeout: 1000
  # Configurações de thread pool otimizadas para consultas
  tomcat:
    threads:
      max: 300
      min-spare: 50
    max-connections: 16384
    accept-count: 200
    connection-timeout: 100

spring:
  application:
    name: package-query-high-volume
  
  datasource:
    url: jdbc:mysql://localhost:3307/packagetracking?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&autoReconnect=true&failOverReadOnly=true&maxReconnects=10&initialTimeout=100&socketTimeout=200&connectTimeout=100&cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true
    username: app_read
    password: app_read
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      # Pool otimizado para consultas de alto volume
      maximum-pool-size: 300
      minimum-idle: 100
      connection-timeout: 100
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 10000
      validation-timeout: 50
      connection-test-query: SELECT 1
      connection-init-sql: SELECT 1
      validation-interval: 5000
      keepalive-time: 10000
      register-mbeans: true
      pool-name: HikariPool-package-query-high-volume
      auto-commit: true
      connection-init-sql: SET SESSION sql_mode='STRICT_TRANS_TABLES'
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        jdbc:
          batch_size: 200
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        cache:
          use_second_level_cache: false
          use_query_cache: false
        show_sql: false
        format_sql: false
        connection:
          provider_disables_autocommit: false
        # Otimizações para performance de consulta
        jdbc.batch_versioned_data: true
        jdbc.batch.builder: legacy
        connection.provider_disables_autocommit: false
        jdbc.timeout: 200
        connection.pool_size: 300
        # Configurações específicas para leitura de alto volume
        hibernate.jdbc.fetch_size: 200
        hibernate.jdbc.batch_size: 200
        hibernate.order_inserts: true
        hibernate.order_updates: true
        hibernate.batch_versioned_data: true

  # Configurações de timeout para controllers de consulta
  mvc:
    async:
      request-timeout: 200 # 200ms para requests assíncronos de consulta

  # Configuração de cache otimizada para alto volume
  cache:
    type: simple
    cache-names:
      - packages
      - packages-list
      - packages-paginated
      - packages-by-status
      - packages-by-sender
      - packages-by-recipient
      - tracking-events
    simple:
      time-to-live: 900000 # 15 minutos
      max-size: 50000

app:
  country-code: BR

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  metrics:
    export:
      prometheus:
        enabled: true
    enable:
      hikaricp: true
      jvm: true
      process: true
      system: true
    tags:
      application: package-query-high-volume
      component: database
      operation: read

logging:
  pattern:
    console: '{"timestamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%level","logger":"%logger{36}","message":"%msg","thread":"%thread","traceId":"%X{traceId}","spanId":"%X{spanId}"}'
  level:
    com.packagetracking: WARN
    org.springframework.web: WARN
    com.packagetracking.query: WARN

java:
  version: "21"
  virtual-threads:
    enabled: true
    max-count: 100000
    stack-size: "64KB" 