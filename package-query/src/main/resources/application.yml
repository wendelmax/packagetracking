spring:
  config:
    activate:
      on-profile: "!test"
  application:
    name: package-query
  
  # Configuração global do Jackson para não serializar campos null
  jackson:
    default-property-inclusion: non_null
  datasource:
    url: jdbc:mysql://localhost:3307/packagetracking?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&autoReconnect=true&failOverReadOnly=true&maxReconnects=10&initialTimeout=300&socketTimeout=500&connectTimeout=300&cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true
    username: app_read
    password: app_read
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      validation-timeout: 250
      connection-test-query: SELECT 1
      connection-init-sql: "SELECT 1"
      validation-interval: 15000
      keepalive-time: 30000
      register-mbeans: true
      pool-name: HikariPool-package-query
      auto-commit: true
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: false
        use_sql_comments: false
        jdbc:
          fetch_size: 50
          batch_size: 100
  # Configuração do Redis
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms
  # Configurações de timeout para controllers de consulta
  mvc:
    async:
      request-timeout: 30000
  # Configuração do servidor web
  web:
    resources:
      add-mappings: false
  # Configuração do servidor
  server:
    port: 8080
    servlet:
      load-on-startup: 1

# Configurações do Resilience4j Circuit Breaker
resilience4j:
  circuitbreaker:
    instances:
      package-cache:
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
        automatic-transition-from-open-to-half-open-enabled: true
  timelimiter:
    instances:
      package-cache:
        timeout-duration: 3s

# Configuração de cache otimizada para alto volume
app:
  country-code: BR
  cache:
    packages:
      ttl: 3600 # 1 hora para pacotes IN_TRANSIT
      max-size: 1000
    events:
      ttl: 300 # 5 minutos para eventos
      max-size: 500

# Configurações de monitoramento e métricas
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,circuitbreakers
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.95,0.99
    tags:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 0.1
    propagation:
      type: w3c
    baggage:
      remote-fields: "x-request-id,x-correlation-id"
      correlation-fields: "x-request-id,x-correlation-id"

# Configurações de logging
logging:
  level:
    com.packagetracking.query: INFO
    org.springframework.cache: DEBUG
    io.github.resilience4j: DEBUG
    org.springframework.data.redis: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/package-query.log
    max-size: 100MB
    max-history: 30
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
      total-size-cap: 3GB 