services:
  mysql1:
    image: mysql:8.0
    container_name: mysql1
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: packagetracking
    volumes:
      - ./mysql/master/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/master/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql1_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - mysql_network

  mysql2:
    image: mysql:8.0
    container_name: mysql2
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: packagetracking

    volumes:
      - ./mysql/slave/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/slave/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql2_data:/var/lib/mysql
    ports:
      - "3307:3306"
    depends_on:
      - mysql1
    networks:
      - mysql_network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - mysql_network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - mysql_network

  package-ingestion:
    build:
      context: ..
      dockerfile: docker/build/Dockerfile.command
    container_name: package-ingestion
    ports:
      - "8080:8080"
    environment:
      # Configurações do servidor
      SERVER_PORT: 8080
      
      # Configurações do banco de dados
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql1:3306/packagetracking?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&autoReconnect=true&failOverReadOnly=false&maxReconnects=10&initialTimeout=500&socketTimeout=1000&connectTimeout=500&cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true
      SPRING_DATASOURCE_USERNAME: app_write
      SPRING_DATASOURCE_PASSWORD: app_write
      
      # Configurações do RabbitMQ
      RABBIT_MQ_HOST: rabbitmq
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_ADDRESS: amqp://rabbitmq:5672/packagetracking
      
      # Configurações de recursos
      PERSISTENCE_ENABLED: true
      QUEUES_ENABLED: false
      ENDPOINTS_TYPE: package
      
      # Configurações de logging
      LOGGING_LEVEL_PACKAGETRACKING: INFO
      LOGGING_LEVEL_SPRING_WEB: WARN
    depends_on:
      - mysql1
      - rabbitmq
    networks:
      - mysql_network

  event-ingestion:
    build:
      context: ..
      dockerfile: docker/build/Dockerfile.command
    container_name: event-ingestion
    ports:
      - "8081:8080"
    environment:
      # Configurações do servidor
      SERVER_PORT: 8080
      
      # Configurações do RabbitMQ
      RABBIT_MQ_HOST: rabbitmq
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_ADDRESS: amqp://rabbitmq:5672/packagetracking
      
      # Configurações de recursos
      PERSISTENCE_ENABLED: false
      QUEUES_ENABLED: true
      ENDPOINTS_TYPE: events
      
      # Configurações de logging
      LOGGING_LEVEL_PACKAGETRACKING: INFO
      LOGGING_LEVEL_SPRING_WEB: WARN
    depends_on:
      - mysql1
      - rabbitmq
    networks:
      - mysql_network

  event-consumer:
    build:
      context: ..
      dockerfile: docker/build/Dockerfile.command
    container_name: event-consumer
    ports:
      - "8082:8080"
    environment:
      # Configurações do servidor
      SERVER_PORT: 8080
      
      # Configurações do banco de dados
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql1:3306/packagetracking?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&autoReconnect=true&failOverReadOnly=false&maxReconnects=10&initialTimeout=500&socketTimeout=1000&connectTimeout=500&cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true
      SPRING_DATASOURCE_USERNAME: app_write
      SPRING_DATASOURCE_PASSWORD: app_write
      
      # Configurações do RabbitMQ
      RABBIT_MQ_HOST: rabbitmq
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_ADDRESS: amqp://rabbitmq:5672/packagetracking
      
      # Configurações de recursos
      PERSISTENCE_ENABLED: true
      QUEUES_ENABLED: true
      ENDPOINTS_TYPE: none
      
      # Configurações de logging
      LOGGING_LEVEL_PACKAGETRACKING: INFO
      LOGGING_LEVEL_SPRING_WEB: WARN
    depends_on:
      - mysql1
      - rabbitmq
    networks:
      - mysql_network

  package-query:
    build:
      context: ..
      dockerfile: docker/build/Dockerfile.query
    container_name: package-query
    ports:
      - "8083:8083"
    environment:
      # Configurações do servidor
      SERVER_PORT: 8083
      
      # Configurações do banco de dados
      SPRING_DATASOURCE_SLAVE_URL: jdbc:mysql://mysql2:3306/packagetracking?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&autoReconnect=true&failOverReadOnly=true&maxReconnects=10&initialTimeout=300&socketTimeout=500&connectTimeout=300&cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true
      SPRING_DATASOURCE_SLAVE_USERNAME: app_read
      SPRING_DATASOURCE_SLAVE_PASSWORD: app_read
      SPRING_DATASOURCE_MASTER_URL: jdbc:mysql://mysql1:3306/packagetracking?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&autoReconnect=true&failOverReadOnly=true&maxReconnects=10&initialTimeout=300&socketTimeout=500&connectTimeout=300&cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true
      SPRING_DATASOURCE_MASTER_USERNAME: app_read
      SPRING_DATASOURCE_MASTER_PASSWORD: app_read
      
      # Configurações do Redis
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      
      # Configurações de cache
      APP_CACHE_PACKAGES_TTL: 3600
      APP_CACHE_PACKAGES_MAX_SIZE: 1000
      APP_CACHE_EVENTS_TTL: 300
      APP_CACHE_EVENTS_MAX_SIZE: 500
      APP_FAILOVER_ENABLED: true
      
      # Configurações de logging
      LOGGING_LEVEL_PACKAGETRACKING_QUERY: INFO
      LOGGING_LEVEL_SPRING_CACHE: DEBUG
      LOGGING_LEVEL_RESILIENCE4J: DEBUG
      LOGGING_LEVEL_SPRING_REDIS: DEBUG
    depends_on:
      - mysql1
      - mysql2
      - redis
    networks:
      - mysql_network

volumes:
  mysql1_data:
  mysql2_data:
  redis_data:

networks:
  mysql_network:
    driver: bridge